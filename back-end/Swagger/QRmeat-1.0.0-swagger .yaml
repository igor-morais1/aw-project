openapi: 3.0.1
info:
  title: QRmeat
  description: API for QRmeat app.
  version: 1.0.0
servers:
  - url: http://api.qrmeat.com/v1
components:
  schemas:
    NewsArticle:
      type: object
      properties:
        newsId:
          type: integer
          description: Unique identifier for the news article
          format: int64
        title:
          type: string
          description: Title of the news article
        content:
          type: string
          description: Content of the news article
        author:
          type: string
          description: Author of the news article
        publishedDate:
          type: string
          description: Publication date of the news article
          format: date-time
      required:
        - newsId
        - title
        - content
        - author
        - publishedDate
  
    
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    authId:
      name: authId
      in: path
      required: true
      schema:
        type: string
    supermarketId:
      name: supermarketId
      in: path
      required: true
      schema:
        type: string
    categoryId:
      name: categoryId
      in: path
      required: true
      schema:
        type: string
    productId:
      name: productId
      in: path
      required: true
      schema:
        type: string
    newsId:
      name: newsId
      in: path
      required: true
      schema:
        type: string
    statisticsId:
      name: statisticsId
      in: path
      required: true
      schema:
        type: string
tags:
  - name: Authentication Service
    description: Manages user login and authentication. Uses User database to store user credentials.
  - name: Product Information Service
    description: Manages data related to supermarkets, meat categories, products, and provides detailed information about meat products. Utilizes Product database to store this information.
  - name: Rating and Feedback Service
    description: Allows users to rate products and leave feedback. Stores user ratings and feedback in the Ratings and feedback database.
  - name: Favorites Management Service
    description: Manages functionality for users to save and manage their favorite meat products. User-specific favorite products are stored in the Favorites database.
  - name: News and Statistics Service
    description: Provides users with news articles and statistical data related to meat consumption. Articles, reports, and statistical data are stored in the News and statistics database.
  - name: Account Management
    description: Manages user profile updates, settings, and pictures. Utilizes User database to store user settings and pictures.
paths:
  /auth:
    get:
      summary: Get authentication page info
      responses:
        '200':
          description: OK
    post:
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  authId:
                    type: string
                  token:
                    type: string
  /auth/{authId}:
    parameters:
      - $ref: '#/components/parameters/authId'
    put:
      summary: Update session authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: OK
    delete:
      summary: Revoke authentication
      security:
        - BearerAuth: []
      responses:
        '204':
          description: No Content
  /users:
    delete:
      summary: Delete all users
      security:
        - BearerAuth: []
      responses:
        '204':
          description: No Content
  /supermarkets:
    get:
      summary: Get homepage information
      responses:
        '200':
          description: OK
  /supermarkets/{supermarketId}:
    parameters:
      - $ref: '#/components/parameters/supermarketId'
    get:
      summary: Get supermarket information
      responses:
        '200':
          description: OK
    put:
      summary: Update supermarket information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
    post:
      summary: Add supermarket information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Created
    delete:
      summary: Delete supermarket information
      responses:
        '204':
          description: No Content
  /supermarkets/{supermarketId}/categories/{categoryId}:
    parameters:
      - $ref: '#/components/parameters/supermarketId'
      - $ref: '#/components/parameters/categoryId'
    get:
      summary: Get category information
      responses:
        '200':
          description: OK
    put:
      summary: Update category information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
    post:
      summary: Add category information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Created
    delete:
      summary: Delete category information
      responses:
        '204':
          description: No Content
  /supermarkets/{supermarketId}/categories/{categoryId}/products/{productId}:
    parameters:
      - $ref: '#/components/parameters/supermarketId'
      - $ref: '#/components/parameters/categoryId'
      - $ref: '#/components/parameters/productId'
    get:
      summary: Get product information
      responses:
        '200':
          description: OK
    put:
      summary: Update product information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
    post:
      summary: Add product information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Created
    delete:
      summary: Delete product information
      responses:
        '204':
          description: No Content
  /products/{productId}/ratings:
    parameters:
      - $ref: '#/components/parameters/productId'
    get:
      summary: Get product ratings
      responses:
        '200':
          description: OK
    post:
      summary: Add rating to product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  format: int32
                  minimum: 1
                  maximum: 5
                comment:
                  type: string
      responses:
        '201':
          description: Created
    put:
      summary: Update rating of product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  format: int32
                  minimum: 1
                  maximum: 5
                comment:
                  type: string
      responses:
        '200':
          description: OK
    delete:
      summary: Delete rating
      responses:
        '204':
          description: No Content
  /favorites:
    get:
      summary: Retrieve favorites list
      responses:
        '200':
          description: OK
    put:
      summary: Update favorites list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
    delete:
      summary: Delete a favorite
      responses:
        '204':
          description: No Content
  /news:
    get:
      summary: Retrieve news list
      responses:
        '200':
          description: OK
  /news/{newsId}:
    parameters:
      - $ref: '#/components/parameters/newsId'
    get:
      summary: Retrieve specific news article
      parameters:
        - name: newsId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsArticle'

    put:
      summary: Update news article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
    post:
      summary: Add news article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsArticle'
      responses:
        '201':
          description: Created
    delete:
      summary: Delete news article
      responses:
        '204':
          description: No Content
  /statistics:
    get:
      summary: Retrieve statistics
      responses:
        '200':
          description: OK
  /statistics/{statisticsId}:
    parameters:
      - $ref: '#/components/parameters/statisticsId'
    put:
      summary: Update statistics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
    post:
      summary: Add new statistics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Created
    delete:
      summary: Delete statistics
      responses:
        '204':
          description: No Content
  /users/{userId}/profile:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get user profile
      responses:
        '200':
          description: OK
    post:
      summary: Add profile photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoUrl:
                  type: string
      responses:
        '201':
          description: Created
    put:
      summary: Update profile photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoUrl:
                  type: string
      responses:
        '200':
          description: OK
  /users/{userId}/account:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get user account details
      responses:
        '200':
          description: OK
    put:
      summary: Update user account details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
  /users/{userId}/settings:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get user account settings
      responses:
        '200':
          description: OK
    put:
      summary: Update user account settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
  /users/{userId}/contact:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get contact page information
      responses:
        '200':
          description: OK
    post:
      summary: Submit contact form
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      responses:
        '201':
          description: Created
  /users/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
    delete:
      summary: Delete user account
      responses:
        '204':
          description: No Content
security:
  - BearerAuth: []